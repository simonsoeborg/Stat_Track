@model StatTrack.Models.PlayerModel
@using StatTrack.Controllers
@using StatTrack.Logic

@{
    ViewData["Title"] = "Edit";

    DataHandler data = new DataHandler();
    List<string>PlayerPosition = data.getPositions();
    var id = PlayerController.currentTeamId;

    ;


}
<h1>Rediger @Model.PlayerName</h1>

<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="PlayerName" class="control-label"></label>
                <input asp-for="PlayerName" class="form-control" />
                <span asp-validation-for="PlayerName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="PlayerPosition" class="control-label"> </label>
                <select asp-for="PlayerPosition" select class="form-select">
                    @for (int i = 0; i < PlayerPosition.Count; i++)
                    {
                        <option value="@PlayerPosition[i].ToString()">@PlayerPosition[i]</option>
                    }
                </select>
            </div>
            <div class="form-group">
                <label asp-for="YOB" class="control-label"></label>
                <input asp-for="YOB" class="form-control" />
                <span asp-validation-for="YOB" class="text-danger"></span>
            </div>
            @Html.HiddenFor(Model => Model.Id)
            <div class="form-group">
                <input type="submit" value="Edit" class="btn btn-outline-primary" />

                @Html.ActionLink("Tilbage", "PlayerLineUp", new { id }, new { @class = "btn btn-outline-secondary" })
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
