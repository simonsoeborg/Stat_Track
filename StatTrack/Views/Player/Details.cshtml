@using StatTrack.Controllers
@model PlayerModel

@{
    ViewData["Title"] = "Details";
    var id = PlayerController.currentTeamId;
}

<h1>Spiller: @Model.PlayerName</h1>

<div class="row justify-content-md-start">
    <hr/>
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.PlayerName)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.PlayerName)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.PlayerPosition)
        </dt>
        <dd class="col-sm-10" id="playerPosition">
            @Html.DisplayFor(model => model.PlayerPosition)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.YOB)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.YOB)
        </dd>
    </dl>
    <div class="form-group">
        @Html.ActionLink("Edit", "Edit", new {playerId = Model.Id, playerName = Model.PlayerName, playerPosition = Model.PlayerPosition, Model.YOB}, new {@class = "btn btn-outline-warning"})


        @Html.ActionLink("Tilbage", "PlayerLineUp", new {id}, new {@class = "btn btn-outline-secondary"})

    </div>
</div>

@await Html.PartialAsync("/Views/Player/_DetailsStatsParital.cshtml", Model)